name: Nightly

on:
  push:
    branches: [ main ]

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    name: Cross-compilation (${{ matrix.target }}, ${{ matrix.friendly }}, ${{ matrix.gcc_pkg }}, ${{ matrix.apt_arch }})
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: armv7-unknown-linux-gnueabihf
            apt_arch: armhf
            gcc_pkg: gcc-arm-linux-gnueabihf
            gcc_triplet: arm-linux-gnueabihf-gcc
            pkgconfig: /usr/lib/arm-linux-gnueabihf/pkgconfig
            friendly: Cerbo GX (ARM v7)
            tool_prefix: arm-linux-gnueabihf
          - target: aarch64-unknown-linux-gnu
            apt_arch: arm64
            gcc_pkg: gcc-aarch64-linux-gnu
            gcc_triplet: aarch64-linux-gnu-gcc
            pkgconfig: /usr/lib/aarch64-linux-gnu/pkgconfig
            friendly: Linux ARM64
            tool_prefix: aarch64-linux-gnu
          - target: x86_64-unknown-linux-gnu
            apt_arch: amd64
            gcc_pkg: gcc
            gcc_triplet: gcc
            pkgconfig: /usr/lib/x86_64-linux-gnu/pkgconfig
            friendly: Linux AMD64
            tool_prefix: x86_64-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-cross-compilation-${{ matrix.target }}

      - name: Install cross-compilation tools
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set -euxo pipefail
          sudo apt-get update -o Acquire::Retries=3
          sudo apt-get install -y --no-install-recommends \
            ${{ matrix.gcc_pkg }} \
            pkg-config \
            cmake \
            make \
            perl \
            libc6-dev-armhf-cross \
            libc6-dev-arm64-cross \
            ca-certificates

      - name: Configure cross env
        shell: bash
        run: |
          set -euxo pipefail
          TARGET_UC=$(echo "${{ matrix.target }}" | tr '[:lower:]-' '[:upper:]_')
          echo "CARGO_TARGET_${TARGET_UC}_LINKER=${{ matrix.tool_prefix }}-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_${TARGET_UC}_AR=${{ matrix.tool_prefix }}-ar" >> $GITHUB_ENV
          echo "CARGO_TARGET_${TARGET_UC}_RANLIB=${{ matrix.tool_prefix }}-ranlib" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${{ matrix.pkgconfig }}" >> $GITHUB_ENV

      - name: Build (release)
        run: cargo build --target ${{ matrix.target }} --release --locked --verbose --all-features

      - name: Package tarball
        uses: ./.github/actions/package-tarball
        with:
          target: ${{ matrix.target }}
          tag: nightly
          binary_path: target/${{ matrix.target }}/release/phaeton
          config_path: phaeton_config.sample.yaml
          webui_dir: webui
          dest_dir: dist

      - name: Upload packaged tarball
        uses: actions/upload-artifact@v4
        with:
          name: tarball-${{ matrix.target }}
          path: dist/phaeton-nightly-${{ matrix.target }}.tar.gz

  publish:
    name: Update Nightly prerelease
    runs-on: ubuntu-24.04
    needs: [build-linux]
    steps:
      - name: Download packaged tarballs
        uses: actions/download-artifact@v5
        with:
          pattern: tarball-*
          path: dist
          merge-multiple: true

      - name: Generate checksums
        run: |
          cd dist
          sha256sum *.tar.gz > SHA256SUMS
          cat SHA256SUMS

      - name: Create/Update Nightly Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: nightly
          name: Nightly
          body: |
            Automated nightly build from ${{ github.sha }}.
            These artifacts are for early testing and may be unstable.
          prerelease: true
          make_latest: false
          files: |
            dist/*.tar.gz
            dist/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


