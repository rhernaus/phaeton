name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Lint (fmt)
        run: cargo fmt --all -- --check

      - name: Lint (clippy)
        run: cargo clippy --all-targets --all-features -- -D warnings -W clippy::cognitive_complexity

      - name: Install llvm-tools and cargo-llvm-cov
        run: |
          rustup component add llvm-tools-preview
          cargo install cargo-llvm-cov --locked

      - name: Clean coverage artifacts
        run: cargo llvm-cov clean --workspace

      - name: Run coverage tests (no report)
        run: cargo llvm-cov --workspace --all-features --no-report

      - name: Generate code coverage (lcov)
        run: cargo llvm-cov report --lcov --output-path lcov.info

      - name: Generate code coverage (html)
        run: cargo llvm-cov report --html

      - name: Upload coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            lcov.info
            target/llvm-cov/html

  budgets:
    name: Budgets
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Verify budget script exists
        run: test -f scripts/check-budgets.sh

      - name: Run budget checks (default budgets)
        run: bash scripts/check-budgets.sh

  audit:
    name: Security Audit
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked

      - name: Run cargo audit
        run: cargo audit --deny warnings

  webui-lint:
    name: Web UI Linters
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Lint HTML/CSS/JS (webui)
        uses: super-linter/super-linter@v8.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: ^webui/.*
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_CSS: true
          VALIDATE_HTML: true

  cross-compilation:
    name: Cross-compilation (${{ matrix.target }}, ${{ matrix.friendly }}, ${{ matrix.gcc_pkg }}, ${{ matrix.apt_arch }})
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: armv7-unknown-linux-gnueabihf
            apt_arch: armhf
            gcc_pkg: gcc-arm-linux-gnueabihf
            gcc_triplet: arm-linux-gnueabihf-gcc
            pkgconfig: /usr/lib/arm-linux-gnueabihf/pkgconfig
            friendly: Cerbo GX (ARM v7)
            tool_prefix: arm-linux-gnueabihf
          - target: aarch64-unknown-linux-gnu
            apt_arch: arm64
            gcc_pkg: gcc-aarch64-linux-gnu
            gcc_triplet: aarch64-linux-gnu-gcc
            pkgconfig: /usr/lib/aarch64-linux-gnu/pkgconfig
            friendly: Linux ARM64
            tool_prefix: aarch64-linux-gnu
          - target: x86_64-unknown-linux-gnu
            apt_arch: amd64
            gcc_pkg: gcc
            gcc_triplet: gcc
            pkgconfig: /usr/lib/x86_64-linux-gnu/pkgconfig
            friendly: Linux AMD64
            tool_prefix: x86_64-linux-gnu
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-cross-compilation-${{ matrix.target }}

      - name: Install cross-compilation tools
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set -euxo pipefail
          sudo apt-get update -o Acquire::Retries=3
          sudo apt-get install -y --no-install-recommends \
            ${{ matrix.gcc_pkg }} \
            pkg-config \
            cmake \
            make \
            perl \
            libc6-dev-armhf-cross \
            libc6-dev-arm64-cross \
            ca-certificates

      - name: Configure cross env
        shell: bash
        run: |
          set -euxo pipefail
          TARGET_UC=$(echo "${{ matrix.target }}" | tr '[:lower:]-' '[:upper:]_')
          echo "CARGO_TARGET_${TARGET_UC}_LINKER=${{ matrix.tool_prefix }}-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_${TARGET_UC}_AR=${{ matrix.tool_prefix }}-ar" >> $GITHUB_ENV
          echo "CARGO_TARGET_${TARGET_UC}_RANLIB=${{ matrix.tool_prefix }}-ranlib" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${{ matrix.pkgconfig }}" >> $GITHUB_ENV

      - name: Build (release)
        run: cargo build --target ${{ matrix.target }} --release --locked --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phaeton-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/phaeton

      - name: Compute short commit hash
        id: shortsha
        shell: bash
        run: echo "value=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Package tarball (for verification)
        uses: ./.github/actions/package-tarball
        with:
          target: ${{ matrix.target }}
          tag: ci-${{ steps.shortsha.outputs.value }}
          binary_path: target/${{ matrix.target }}/release/phaeton
          config_path: phaeton_config.sample.yaml
          webui_dir: webui
          dest_dir: dist

      - name: Upload packaged tarball (for verification)
        uses: actions/upload-artifact@v4
        with:
          name: tarball-${{ matrix.target }}
          path: dist/phaeton-ci-${{ steps.shortsha.outputs.value }}-${{ matrix.target }}.tar.gz
