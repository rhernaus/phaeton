name: CI

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --all --locked --verbose

  audit:
    name: Security Audit
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked

      - name: Run cargo audit
        run: cargo audit --deny warnings

  macos-build:
    name: macOS Build
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build (release)
        run: cargo build --release --locked --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phaeton-macos-arm64
          path: target/release/phaeton

  cross-compilation:
    name: Cross-compilation (${{ matrix.target }}, ${{ matrix.friendly }}, ${{ matrix.gcc_pkg }}, ${{ matrix.apt_arch }})
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: armv7-unknown-linux-gnueabihf
            apt_arch: armhf
            gcc_pkg: gcc-arm-linux-gnueabihf
            gcc_triplet: arm-linux-gnueabihf-gcc
            pkgconfig: /usr/lib/arm-linux-gnueabihf/pkgconfig
            friendly: Cerbo GX (ARM v7)
          - target: aarch64-unknown-linux-gnu
            apt_arch: arm64
            gcc_pkg: gcc-aarch64-linux-gnu
            gcc_triplet: aarch64-linux-gnu-gcc
            pkgconfig: /usr/lib/aarch64-linux-gnu/pkgconfig
            friendly: Linux ARM64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: rust-cross-compilation-${{ matrix.target }}

      - name: Install cross-compilation tools
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          set -euxo pipefail
          sudo dpkg --add-architecture ${{ matrix.apt_arch }}
          sudo apt-get update -o Acquire::Retries=3
          sudo apt-get install -y --no-install-recommends \
            ${{ matrix.gcc_pkg }} \
            pkg-config \
            zlib1g-dev:${{ matrix.apt_arch }} \
            libssl-dev:${{ matrix.apt_arch }} \
            libssh2-1-dev:${{ matrix.apt_arch }} \
            ca-certificates

      - name: Configure cross env
        shell: bash
        run: |
          set -euxo pipefail
          TARGET_UC=$(echo "${{ matrix.target }}" | tr '[:lower:]-' '[:upper:]_')
          echo "CARGO_TARGET_${TARGET_UC}_LINKER=${{ matrix.gcc_triplet }}" >> $GITHUB_ENV
          echo "PKG_CONFIG_ALLOW_CROSS=1" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${{ matrix.pkgconfig }}" >> $GITHUB_ENV

      - name: Build (release)
        run: cargo build --target ${{ matrix.target }} --release --locked --verbose

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: phaeton-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/phaeton
